name: CI/CD Terraform

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform:
    name: Run Terraform
    runs-on: ubuntu-latest
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
      
      - name: Terraform Init
        id: terraform-init
        run: terraform init -backend-config="encryption_key=${{ secrets.TF_ENCRYPTION_KEY }}"

      - name: Terraform Format
        id: terraform-fmt
        run: terraform fmt -check
      
      - name: Terraform Plan
        id: terraform-plan
        if: github.event_name == 'pull_request'
        run: terraform plan -no-color
        continue-on-error: true
      
      - name: Update Pull Request
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request'
        env:
          PLAN: "${{ steps.terraform-plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format \`${{ steps.terraform-fmt.outcome }}\`
            #### Terraform Initialization \`${{ steps.terraform-init.outcome }}\`
            #### Terraform Plan \`${{ steps.terraform-plan.outcome }}\`
            
            <details><summary>Show Plan</summary>

            ${{ env.PLAN }}

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
      
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
      
      - name: Terraform Apply
        id: terraform-apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve
