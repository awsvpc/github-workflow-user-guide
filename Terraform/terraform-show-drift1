name: 'Terraform Configuration Drift Detection'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'


env:
 TF_LOG: INFO
 GOOGLE_CREDENTIALS: ${{ secrets.TERRAFORM_GOOGLE_CREDENTIALS }}
 TF_IN_AUTOMATION: "true"

jobs:
  get_envs:
    runs-on: ubuntu-latest
    outputs:
      envs: ${{ steps.find_env_files.outputs.envs }}
    steps:
      - name: 👨🏻‍💻 Repository checkout.
        uses: actions/checkout@main

      - name: find envs
        id: find_env_files
        run: |
          echo "envs=$(ls -1 tfenvs/ |awk -F. '{print $1}' | jq -R -s -c 'split("\n")[:-1]')" >> "$GITHUB_OUTPUT"
        shell: bash

  terraform_plan:
    name: "Terraform Plan"
    runs-on: ubuntu-latest
    needs: [get_envs]
    strategy:
      matrix:
        env: ${{ fromJson(needs.get_envs.outputs.envs) }}
    defaults:
      run:
        shell: bash
        working-directory: projects
    env:
      TF_WORKSPACE: ${{ matrix.env }}

    permissions:
      contents: 'read'
      id-token: 'write'
      checks: write

    steps:
      - name: 👨🏻‍💻 Repository checkout.
        uses: actions/checkout@main

      - name: Install tfenv
        run: |
          git clone https://github.com/tfutils/tfenv.git ~/.tfenv
          echo "$HOME/.tfenv/bin" >> $GITHUB_PATH

      - name: Install Terraform
        run: |
          tfenv install
          terraform --version

      - name: Terraform init
        id: init
        run: terraform init

      - name: Plan Terraform
        id: tf-plan
        continue-on-error: true
        run: |
          export exitcode=0
          terraform plan -detailed-exitcode -no-color -out tfplan -var-file=../tfenvs/${{matrix.env}}.tfvars  || export exitcode=$?

          echo "exitcode=$exitcode" >> $GITHUB_OUTPUT

          if [ $exitcode -eq 1 ]; then
            echo Terraform Plan Failed!
            exit 1
          else
            exit 0
          fi

      # Create string output of Terraform Plan
      - name: Create String Output
        id: tf-plan-string
        run: |
          TERRAFORM_PLAN=$(terraform show -no-color tfplan)

          delimiter="$(openssl rand -hex 8)"
          echo "summary<<${delimiter}" >> $GITHUB_OUTPUT
          echo "## Terraform ${{matrix.env}} Plan Output" >> $GITHUB_OUTPUT
          echo "<details><summary>Click to expand</summary>" >> $GITHUB_OUTPUT
          echo "" >> $GITHUB_OUTPUT
          echo '```terraform' >> $GITHUB_OUTPUT
          echo "$TERRAFORM_PLAN" >> $GITHUB_OUTPUT
          echo '```' >> $GITHUB_OUTPUT
          echo "</details>" >> $GITHUB_OUTPUT
          echo "${delimiter}" >> $GITHUB_OUTPUT

      # Publish Terraform Plan as task summary
      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> $GITHUB_STEP_SUMMARY

      # Mark the workflow as failed if drift detected
      - name: Error on Failure
        if: steps.tf-plan.outputs.exitcode == 2
        run: exit 1

      - name: slack notification
        if: steps.tf-plan.outputs.exitcode == 2
        run: echo "slack notification"
